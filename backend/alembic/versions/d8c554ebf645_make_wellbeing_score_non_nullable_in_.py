"""Make wellbeing_score non-nullable in training entries

Revision ID: d8c554ebf645
Revises: 15df92471cdd
Create Date: 2025-04-07 15:41:53.057811

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd8c554ebf645'
down_revision: Union[str, None] = '15df92471cdd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sport_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('event_date', sa.DateTime(), nullable=False),
    sa.Column('registration_deadline', sa.DateTime(), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('organizer', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sport_events_id'), 'sport_events', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.Column('gender', sa.Enum('male', 'female', name='gendertype'), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('personal_data_consent', sa.Boolean(), nullable=False),
    sa.Column('health_data_consent', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('event_training_entries',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('entry_timing', sa.Enum('before', 'after', 'rest', name='entrytimingtype'), nullable=False),
    sa.Column('entry_date', sa.DateTime(), nullable=False),
    sa.Column('wellbeing_score', sa.Integer(), nullable=False),
    sa.Column('training_intensity', sa.Integer(), nullable=True),
    sa.Column('has_injury', sa.Boolean(), nullable=True),
    sa.Column('injury_location', sa.Enum('leg', 'arm', 'torso', 'head', 'other', name='injurylocationtype'), nullable=True),
    sa.Column('blood_pressure_sys', sa.Integer(), nullable=True),
    sa.Column('blood_pressure_dia', sa.Integer(), nullable=True),
    sa.Column('food_score', sa.Integer(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('pulse', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('sleep_quality', sa.Integer(), nullable=True),
    sa.Column('sleep_hours', sa.Float(), nullable=True),
    sa.Column('blood_sugar', sa.Float(), nullable=True),
    sa.Column('medications', sa.Text(), nullable=True),
    sa.Column('personal_notes', sa.Text(), nullable=True),
    sa.Column('bmi', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['sport_events.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_event_training_entries_id'), 'event_training_entries', ['id'], unique=False)
    op.create_table('health_profile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('chronic_diseases', sa.Text(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('avg_blood_pressure_sys', sa.Float(), nullable=True),
    sa.Column('avg_blood_pressure_dia', sa.Float(), nullable=True),
    sa.Column('avg_blood_sugar', sa.Float(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_health_profile_id'), 'health_profile', ['id'], unique=False)
    op.create_table('personal_training_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('entry_timing', sa.Enum('before', 'after', 'rest', name='entrytimingtype'), nullable=False),
    sa.Column('entry_date', sa.DateTime(), nullable=False),
    sa.Column('wellbeing_score', sa.Integer(), nullable=False),
    sa.Column('training_intensity', sa.Integer(), nullable=True),
    sa.Column('has_injury', sa.Boolean(), nullable=True),
    sa.Column('injury_location', sa.Enum('leg', 'arm', 'torso', 'head', 'other', name='injurylocationtype'), nullable=True),
    sa.Column('blood_pressure_sys', sa.Integer(), nullable=True),
    sa.Column('blood_pressure_dia', sa.Integer(), nullable=True),
    sa.Column('food_score', sa.Integer(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('pulse', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('sleep_quality', sa.Integer(), nullable=True),
    sa.Column('sleep_hours', sa.Float(), nullable=True),
    sa.Column('blood_sugar', sa.Float(), nullable=True),
    sa.Column('medications', sa.Text(), nullable=True),
    sa.Column('personal_notes', sa.Text(), nullable=True),
    sa.Column('bmi', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_personal_training_entries_id'), 'personal_training_entries', ['id'], unique=False)
    op.create_table('sleep_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('sleep_date', sa.Date(), nullable=False),
    sa.Column('sleep_quality', sa.Integer(), nullable=True),
    sa.Column('sleep_hours', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'sleep_date', name='unique_user_sleep_date')
    )
    op.create_index(op.f('ix_sleep_records_id'), 'sleep_records', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sleep_records_id'), table_name='sleep_records')
    op.drop_table('sleep_records')
    op.drop_index(op.f('ix_personal_training_entries_id'), table_name='personal_training_entries')
    op.drop_table('personal_training_entries')
    op.drop_index(op.f('ix_health_profile_id'), table_name='health_profile')
    op.drop_table('health_profile')
    op.drop_index(op.f('ix_event_training_entries_id'), table_name='event_training_entries')
    op.drop_table('event_training_entries')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_sport_events_id'), table_name='sport_events')
    op.drop_table('sport_events')
    # ### end Alembic commands ###
